/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gob.servir.workflow.model;

import java.io.Serializable;
import java.util.Date;

import javax.persistence.*;

/**
 * 
 * @author Hever
 */
@Entity
public class DetalleActividad implements Serializable {
	private static final long serialVersionUID = 1L;

	@Id
	//@GeneratedValue(strategy = GenerationType.TABLE)
	private Long idDetalleActividad;
	@Column
	private String usuarioRegistra;
	@Column
	private String usuarioModifica;
	@Column
	@Temporal(TemporalType.TIMESTAMP)
	private Date fechaCreacion;
	@Column
	@Temporal(TemporalType.TIMESTAMP)
	private Date fechaModificacion;
	@Column
	private String estado;
	@JoinColumns({
        @JoinColumn(name = "idActividad", referencedColumnName = "idActividad"),
        @JoinColumn(name = "idProceso", referencedColumnName = "idProceso")})
    @ManyToOne(optional = false)
	private Actividad actividad;
	@JoinColumn(name = "idTipoDocumento")
	@ManyToOne
	private TipoDocumento tipoDocumento;

	public DetalleActividad() {
	}

	public Long getIdDetalleActividad() {
		return idDetalleActividad;
	}

	public void setIdDetalleActividad(Long idDetalleActividad) {
		this.idDetalleActividad = idDetalleActividad;
	}

	public String getUsuarioRegistra() {
		return usuarioRegistra;
	}

	public void setUsuarioRegistra(String usuarioRegistra) {
		this.usuarioRegistra = usuarioRegistra;
	}

	public String getUsuarioModifica() {
		return usuarioModifica;
	}

	public void setUsuarioModifica(String usuarioModifica) {
		this.usuarioModifica = usuarioModifica;
	}

	public Date getFechaCreacion() {
		return fechaCreacion;
	}

	public void setFechaCreacion(Date fechaCreacion) {
		this.fechaCreacion = fechaCreacion;
	}

	public Date getFechaModificacion() {
		return fechaModificacion;
	}

	public void setFechaModificacion(Date fechaModificacion) {
		this.fechaModificacion = fechaModificacion;
	}

	public String getEstado() {
		return estado;
	}

	public void setEstado(String estado) {
		this.estado = estado;
	}

	public Actividad getActividad() {
		return actividad;
	}

	public void setActividad(Actividad actividad) {
		this.actividad = actividad;
	}

	public TipoDocumento getTipoDocumento() {
		return tipoDocumento;
	}

	public void setTipoDocumento(TipoDocumento tipoDocumento) {
		this.tipoDocumento = tipoDocumento;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((actividad == null) ? 0 : actividad.hashCode());
		result = prime * result + ((estado == null) ? 0 : estado.hashCode());
		result = prime * result
				+ ((fechaCreacion == null) ? 0 : fechaCreacion.hashCode());
		result = prime
				* result
				+ ((fechaModificacion == null) ? 0 : fechaModificacion
						.hashCode());
		result = prime
				* result
				+ ((idDetalleActividad == null) ? 0 : idDetalleActividad
						.hashCode());
		result = prime * result
				+ ((tipoDocumento == null) ? 0 : tipoDocumento.hashCode());
		result = prime * result
				+ ((usuarioModifica == null) ? 0 : usuarioModifica.hashCode());
		result = prime * result
				+ ((usuarioRegistra == null) ? 0 : usuarioRegistra.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		DetalleActividad other = (DetalleActividad) obj;
		if (actividad == null) {
			if (other.actividad != null)
				return false;
		} else if (!actividad.equals(other.actividad))
			return false;
		if (estado == null) {
			if (other.estado != null)
				return false;
		} else if (!estado.equals(other.estado))
			return false;
		if (fechaCreacion == null) {
			if (other.fechaCreacion != null)
				return false;
		} else if (!fechaCreacion.equals(other.fechaCreacion))
			return false;
		if (fechaModificacion == null) {
			if (other.fechaModificacion != null)
				return false;
		} else if (!fechaModificacion.equals(other.fechaModificacion))
			return false;
		if (idDetalleActividad == null) {
			if (other.idDetalleActividad != null)
				return false;
		} else if (!idDetalleActividad.equals(other.idDetalleActividad))
			return false;
		if (tipoDocumento == null) {
			if (other.tipoDocumento != null)
				return false;
		} else if (!tipoDocumento.equals(other.tipoDocumento))
			return false;
		if (usuarioModifica == null) {
			if (other.usuarioModifica != null)
				return false;
		} else if (!usuarioModifica.equals(other.usuarioModifica))
			return false;
		if (usuarioRegistra == null) {
			if (other.usuarioRegistra != null)
				return false;
		} else if (!usuarioRegistra.equals(other.usuarioRegistra))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "DetalleActividad [idDetalleActividad=" + idDetalleActividad
				+ ", usuarioRegistra=" + usuarioRegistra + ", usuarioModifica="
				+ usuarioModifica + ", fechaCreacion=" + fechaCreacion
				+ ", fechaModificacion=" + fechaModificacion + ", estado="
				+ estado + ", actividad=" + actividad + ", tipoDocumento="
				+ tipoDocumento + "]";
	}

}

package gob.servir.workflow.model;

import java.io.Serializable;
import java.util.Date;

import javax.persistence.*;

/**
 * 
 * @author Hever Pumallihua
 */
@Entity
public class Bandeja implements Serializable {
	private static final long serialVersionUID = 1L;

	@EmbeddedId
	private BandejaPK bandejaPK;
	@Column
	private String usuarioRegistra;
	@Column
	private String usuarioModifica;
	@Column
	@Temporal(TemporalType.TIMESTAMP)
	private Date fechaCreacion;
	@Column
	@Temporal(TemporalType.TIMESTAMP)
	private Date fechaModificacion;
	@Column(length = 4000)
	private String descripcion;
	@Column
	private String estado;
	@JoinColumn(name = "idFlujo", referencedColumnName = "idFlujo", insertable = false, updatable = false)
	@ManyToOne(optional = false, fetch = FetchType.LAZY)
	private Flujo flujo;
	@JoinColumns({
			@JoinColumn(name = "idActividad", referencedColumnName = "idActividad", insertable = false, updatable = false),
			@JoinColumn(name = "idProceso", referencedColumnName = "idProceso", insertable = false, updatable = false) })
	@ManyToOne(optional = false)
	private Actividad actividad;

	public Bandeja() {
	}

	public BandejaPK getBandejaPK() {
		return bandejaPK;
	}

	public void setBandejaPK(BandejaPK bandejaPK) {
		this.bandejaPK = bandejaPK;
	}

	public String getUsuarioRegistra() {
		return usuarioRegistra;
	}

	public void setUsuarioRegistra(String usuarioRegistra) {
		this.usuarioRegistra = usuarioRegistra;
	}

	public String getUsuarioModifica() {
		return usuarioModifica;
	}

	public void setUsuarioModifica(String usuarioModifica) {
		this.usuarioModifica = usuarioModifica;
	}

	public Date getFechaCreacion() {
		return fechaCreacion;
	}

	public void setFechaCreacion(Date fechaCreacion) {
		this.fechaCreacion = fechaCreacion;
	}

	public Date getFechaModificacion() {
		return fechaModificacion;
	}

	public void setFechaModificacion(Date fechaModificacion) {
		this.fechaModificacion = fechaModificacion;
	}

	public String getDescripcion() {
		return descripcion;
	}

	public void setDescripcion(String descripcion) {
		this.descripcion = descripcion;
	}

	public String getEstado() {
		return estado;
	}

	public void setEstado(String estado) {
		this.estado = estado;
	}

	public Flujo getFlujo() {
		return flujo;
	}

	public void setFlujo(Flujo flujo) {
		this.flujo = flujo;
	}

	public Actividad getActividad() {
		return actividad;
	}

	public void setActividad(Actividad actividad) {
		this.actividad = actividad;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((bandejaPK == null) ? 0 : bandejaPK.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Bandeja other = (Bandeja) obj;
		if (bandejaPK == null) {
			if (other.bandejaPK != null)
				return false;
		} else if (!bandejaPK.equals(other.bandejaPK))
			return false;
		return true;
	}

	@Override
	public String toString() {
		StringBuilder builder = new StringBuilder();
		builder.append("Bandeja [bandejaPK=");
		builder.append(bandejaPK);
		builder.append("]");
		return builder.toString();
	}

}
